before_script:
  # Install ssh-agent if not already installed, it is required by Docker.
  # (change apt-get to yum if you use a CentOS-based image)
  - 'apt-get -qq update -y'
  - 'apt-get -qq install build-essential
                         openssh-client
                         python-catkin-tools
                         sudo -y'

  # Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)

  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  - ssh-add <(echo "$SSH_PRIVATE_KEY")

  # For Docker builds disable host key checking. Be aware that by adding that
  # you are suspectible to man-in-the-middle attacks.
  # WARNING: Use this only with the Docker executor, if you use it with shell
  # you will overwrite your user's SSH config.
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

  # Here we are at /build/$CI_PROJECT_NAME
  # For pure catkin projects, we need a workspace:
  - mkdir -p /build/ws/src/
  - cd /build/ws
  - ln -s $CI_PROJECT_DIR src/$CI_PROJECT_NAME
  # clone dependencies here:
  - cd src
  - cd ..

stages:
  - build

kinetic:
  stage: build
  image: ros:kinetic
  script:
    - sudo apt-get install -y software-properties-common
    - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
    - sudo apt-get update
    - sudo apt-get install -y g++-7 gcc-7
    - source /opt/ros/$(ls /opt/ros/ | sort -r | head -n 1)/setup.bash
    - rosdep install -y -r -i --from-paths src
    - catkin build -DCMAKE_C_COMPILER=/usr/bin/gcc-7 -DCMAKE_CXX_COMPILER=/usr/bin/g++-7
    - catkin run_tests cslibs_indexed_storage --no-deps

melodic:
  stage: build
  image: ros:melodic
  script:
    - source /opt/ros/$(ls /opt/ros/ | sort -r | head -n 1)/setup.bash
    - rosdep install -y -r -i --from-paths src
    - catkin build
    - catkin run_tests cslibs_indexed_storage --no-deps